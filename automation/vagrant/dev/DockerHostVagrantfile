# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'

require 'rbconfig'
home_folder = ENV['HOME']
  def os
    @os ||= (
      host_os = RbConfig::CONFIG['host_os']
      case host_os
      when /mswin|msys|mingw|cygwin|bccwin|wince|emc/
        :windows
      when /darwin|mac os/
        :macosx
      when /linux/
        :linux
      when /solaris|bsd/
        :unix
      else
        raise Error::WebDriverError, "unknown os: #{host_os.inspect}"
      end
    )
  end
if os().to_s == 'windows'
  username = ENV['USER']
  home_folder = "/home/"+username
end

dev_uid = Process.uid
settings = YAML.load_file 'vagrant.yml'
gradle_folder = home_folder+"/.gradle"
api_src_folder = home_folder+"/api_project"
web_src_folder = home_folder+"/web_project"

$script = <<SCRIPT
DEV_UID=$1
USERNAME=$2
HOME_FOLDER=$3
echo $DEV_UID
#Add developer user
adduser --quiet --uid $DEV_UID --disabled-password -shell /bin/bash --home $HOME_FOLDER --gecos "User" $USERNAME && \
    echo "$USERNAME:password" | chpasswd
echo "$USERNAME  ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers
SCRIPT

Vagrant.configure("2") do |config|
  puts home_folder
  file_to_disk = File.realpath( "." ).to_s + "/disk3.vdi"
  config.vm.define "dockerhost"
  config.vm.box = "phusion/ubuntu-14.04-amd64"

  config.vm.provider :virtualbox do |vb|
    puts vb.to_s
    if ARGV[0] == "up" && ! File.exist?(file_to_disk) 
       puts "Creating 50GB disk #{file_to_disk}."
       vb.customize [
            'createhd', 
            '--filename', file_to_disk, 
            '--format', 'VDI', 
            '--size', 20000 * 1024 # 20 GB
            ] 
       vb.customize [
            'storageattach', :id, 
            '--storagectl', 'SATA Controller', 
            '--port', 1, '--device', 0, 
            '--type', 'hdd', '--medium', 
            file_to_disk
            ]
    end
      vb.name = "dockerhost"
      vb.memory = "2048"
  end
  # The following line terminates all ssh connections. Therefore
  # Vagrant will be forced to reconnect.
  # That's a workaround to have the docker command in the PATH
  config.vm.provision "shell", inline:
    "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"

  config.vm.provision "shell", path: "add_new_disk.sh"
  config.vm.provision :shell, inline: "sudo apt-get update"
  config.vm.provision :shell, inline: "sudo apt-get -y install lvm2"
  config.vm.provision "docker"
  config.vm.provision "shell" do |s|
        s.inline = $script
        s.args = [dev_uid,settings['user']['name'],home_folder]
  end

  config.vm.network "forwarded_port",
    guest: 8080, host: 18080

  config.vm.network "forwarded_port",
    guest: 8000, host: 8000
  
  config.vm.network "forwarded_port",
    guest: 80, host: 8888

  config.vm.network "forwarded_port",
    guest: 443, host: 9443

  config.vm.network "forwarded_port",
    guest: 2222, host: 12222

  config.vm.synced_folder settings['api_src_dir']['host'], api_src_folder,
    owner: dev_uid
  config.vm.synced_folder settings['web_src_dir']['host'], web_src_folder,
    owner: dev_uid
  config.vm.synced_folder settings['web_deploy']['host'], settings['web_deploy']['guest'],
    owner: dev_uid
  config.vm.synced_folder settings['gradle_folder']['host'], gradle_folder,
    owner: dev_uid
end

