# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'
require 'rbconfig'

dev_uid = Process.uid
settings = YAML.load_file 'vagrant.yml'
guest_home_folder = ENV['HOME']
host_home_folder = ENV['HOME']

def os
    @os ||= (
      host_os = RbConfig::CONFIG['host_os']
      case host_os
      when /mswin|msys|mingw|cygwin|bccwin|wince|emc/
        :windows
      when /darwin|mac os/
        :macosx
      when /linux/
        :linux
      when /solaris|bsd/
        :unix
      else
        raise Error::WebDriverError, "unknown os: #{host_os.inspect}"
      end
    )
end

if os().to_s == 'windows'
  username = ENV['USER']
  guest_home_folder = "/home/"+username
  dev_uid = 1001
end

host_gradle_folder = host_home_folder+"/.gradle"
guest_gradle_folder = guest_home_folder+"/.gradle"
api_src_folder = guest_home_folder+"/"+settings['api_project']['name']
web_src_folder = guest_home_folder+"/"+settings['web_project']['name']

$script = <<SCRIPT
DEV_UID=$1
USERNAME=$2
HOME_FOLDER=$3
DEFAULT_PASSWORD=$4
echo $DEV_UID
UID_PARAM=""
if [ "$DEV_UID" != "0" ]; then
   UID_PARAM=" --uid $DEV_UID"
fi
echo $UID_PARAM
#Add developer user
echo $DEFAULT_PASSWORD
echo $USERNAME

echo adduser --quiet $UID_PARAM --disabled-password -shell /bin/bash --home $HOME_FOLDER --gecos "User" $USERNAME
echo "$USERNAME:$DEFAULT_PASSWORD"
adduser --quiet $UID_PARAM --disabled-password -shell /bin/bash --home $HOME_FOLDER --gecos "User" $USERNAME
echo "$USERNAME:$DEFAULT_PASSWORD" | chpasswd

echo "$USERNAME  ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers
SCRIPT

Vagrant.configure("2") do |config|
  puts "Creating dockerhostvm in virtualbox"
  config.vm.box = "box-cutter/ubuntu1404-desktop"
  config.vm.define "dockerhostvm"
  file_to_disk = File.realpath( "." ).to_s + "/disk.vdi"

  config.vm.provider :virtualbox do |vb|
    puts "Customizing dockerhost vm "+vb.to_s
    vb.name = "dockerhostvm"
    vb.memory = "2048"
    vb.customize ["modifyvm", :id, "--cpus", "2"]
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
    vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
    vb.customize ["modifyvm", :id, "--vram", "128"]
    vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.gui = true
    if ARGV[0] == "up" && ! File.exist?(file_to_disk)
       puts "Creating 20GB disk #{file_to_disk}."
       vb.customize [
            'createhd',
            '--filename', file_to_disk,
            '--format', 'VDI',
            '--size', 200 * 1024 # 20 GB
            ]
       vb.customize [
            'storageattach', :id,
            '--storagectl', 'SATA Controller',
            '--port', 1, '--device', 0,
            '--type', 'hdd', '--medium',
            file_to_disk
            ]
    end
  end


  config.vm.synced_folder settings['api_project']['src_folder'], api_src_folder,
    owner: dev_uid
  config.vm.synced_folder settings['web_project']['src_folder'], web_src_folder,
    owner: dev_uid
  config.vm.synced_folder settings['web_project']['src_folder'], settings['web_project']['document_root'],
    owner: dev_uid
  config.vm.synced_folder host_gradle_folder, guest_gradle_folder,
    owner: dev_uid

 config.vm.provision "shell", inline:
    "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"

 config.vm.provision :shell, inline: "echo export DISPLAY=:0 >>/home/vagrant/.bashrc"
 config.vm.provision :shell, inline: "echo xhost + >>/home/vagrant/.bashrc"


  config.vm.provision :shell, inline: "sudo apt-get update"
  config.vm.provision :shell, inline: "sudo apt-get -y install lvm2"
  config.vm.provision "docker"
  config.vm.provision "shell", path: "add_new_disk.sh"
  config.vm.provision "shell" do |s|
        s.inline = $script
        s.args = [dev_uid,settings['user']['name'],guest_home_folder,settings['user']['default_password']]
  end
  config.vm.provision :shell, inline: "service docker restart"
  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true

  config.vm.network "forwarded_port",
    guest: 8080, host: 18080
  config.vm.network "forwarded_port",
    guest: 8000, host: 8000
  config.vm.network "forwarded_port",
    guest: 80, host: 8888
  config.vm.network "forwarded_port",
    guest: 443, host: 9443
  config.vm.network "forwarded_port",
    guest: 2222, host: 12222

end
