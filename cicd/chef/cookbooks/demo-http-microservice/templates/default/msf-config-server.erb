#!/bin/sh
### BEGIN INIT INFO
# Provides:         <%= @vars[:service_name] %>
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start bounded context.
# Description:       Start bounded context.
### END INIT INFO

<% java_define_string = ''
   @vars[:defines].each_key do |k|
     java_define_string += "-D#{k}=#{@vars[:defines][k]} "
   end
%>

dir="<%= @vars[:install_path] %>"
cmd="java <%= java_define_string %> -jar <%= @vars[:jar_file] %>"
user="<%= @vars[:user] %>"

name="<%= @vars[:service_name] %>"
pid_file="/var/run/$name.pid"
stdout_log="<%= @vars[:log_path] %>/logs/$name.log"
stderr_log="<%= @vars[:log_path] %>/logs/$name.err"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        if [ -z "$user" ]; then
            sudo $cmd >> "$stdout_log" 2>> "$stderr_log" &
        else
            sudo -u "$user" touch "$stdout_log" "$stderr_log"
            sudo -u "$user" $cmd >> "$stdout_log" 2>> "$stderr_log" &
        fi
        echo $! > "$pid_file"
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 5
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
